---
# tasks file for jenkins-install
- name: Add Jenkins repo
  become: yes
  get_url:
    url: https://pkg.jenkins.io/redhat-stable/jenkins.repo
    dest: /etc/yum.repos.d/jenkins.repo

- name: Add jenkins repo key
  become: yes
  rpm_key:
    state: present
    key: https://pkg.jenkins.io/redhat-stable/jenkins.io.key

- name: Install jenkins
  become: yes
  package:
    name: jenkins
    state: present

- name: Install lmxl et pyton jenkins
  become: yes
  pip:
    name: "{{ item }}"
  with_items: "{{ pip_package }}"

- name: Create groovy directory
  become: yes
  file:
    path: "/var/lib/jenkins/init.groovy.d/"
    state: directory
    owner: jenkins
    group: jenkins

- name: Create admin
  become: yes
  template:
    src: basic-security.groovy.j2
    dest: /var/lib/jenkins/init.groovy.d/basic-security.groovy
    owner: jenkins
    group: jenkins

- name: CSRF security
  become: yes
  template:
    src: csrf.groovy.j2
    dest: /var/lib/jenkins/init.groovy.d/csrf.groovy
    owner: jenkins
    group: jenkins

- name: git config
  become: yes
  template:
    src: gitconfig.j2
    dest: /var/lib/jenkins/hudson.plugins.git.GitSCM.xml
    owner: jenkins
    group: jenkins

- name: Configure Init file
  become: yes
  lineinfile:
    dest: /etc/sysconfig/jenkins
    insertafter: '^JENKINS_ARGS'
    line: 'JENKINS_ARGS="$JENKINS_ARGS --prefix=/"'
    state: present

- name: Configure Port
  become: yes
  lineinfile:
    dest: /etc/sysconfig/jenkins
    regexp: '^JENKINS_PORT='
    line: 'JENKINS_PORT="{{ jenkins_port }}"'
    state: present

- name: Configure Init file
  become: yes
  lineinfile:
    dest: /etc/sysconfig/jenkins
    insertafter: '^JENKINS_JAVA_OPTIONS'
    line: 'JENKINS_JAVA_OPTIONS="$JENKINS_JAVA_OPTIONS -Djenkins.install.runSetupWizard=false"'
    state: present

- name: Start Jenkins
  become: yes
  systemd:
    name: jenkins
    state: started

- name: Create update directory
  become: yes
  file:
    path: "/var/lib/jenkins/updates"
    state: directory
    owner: jenkins
    group: jenkins

- name: Create update directory
  become: yes
  file:
    path: "/var/lib/jenkins/plugins"
    state: directory
    owner: jenkins
    group: jenkins

#- name: Download current plugin updates from Jenkins update site
#  become: yes
#  get_url:
#    url: "http://updates.jenkins-ci.org/latest/{{ item }}.hpi"
#    dest: /var/lib/jenkins/plugins
#    owner: jenkins
#    group: jenkins
#  with_items: "{{ jenkins_plugins }}"
#
- name: crumb
  uri:
    url: '{{ jenkins_address }}/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,":",//crumb)'
    user: user
    password: user-password
    force_basic_auth: yes
    return_content: yes
  register: crumb

- name: restart Jenkins
  become: yes
  systemd:
    name: jenkins
    state: restarted

- name: wait Jenkins
  uri:
    url: "{{ jenkins_address }}/login?from=%2F"
    return_content: yes
  register: result
  until: result.status == 200
  retries: 60
  delay: 1

- name: Set global password
  uri:
    method: POST
    url: '{{ jenkins_address }}/credentials/store/system/domain/_/createCredentials'
    user: user
    password: user-password
    force_basic_auth: yes
    headers:
      Jenkins-Crumb: "{{ crumb.content.split(':')[1] }}"
    body: |
      json={
        "": "0",
        "credentials": {
          "scope": "GLOBAL",
          "id": "{{ scm_user }}",
          "username": "{{ scm_user }}",
          "password": "{{ scm_password }}",
          "description": "My new credentials",
          "$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"
        }
      }
    status_code: 302
